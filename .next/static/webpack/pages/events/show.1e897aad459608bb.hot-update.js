/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/events/show",{

/***/ "./pages/events/show.js":
/*!******************************!*\
  !*** ./pages/events/show.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React, { Component } from 'react';\n// import { Card, Button, Message } from 'semantic-ui-react';\n// import Layout from '../../components/Layout';\n// import Event from '../../ethereum/event';\n// import web3 from '../../ethereum/web3';\n// import { Router, Link } from '../../routes';\n// class EventShow extends Component {\n//     static async getInitialProps(props) {\n//         const event = Event(props.query.address);\n//         const summary = await event.methods.getEventDetails().call();\n//         return {\n//             name: summary[0],\n//             ticketPrice: summary[1].toString(),\n//             ticketSupply: summary[2].toString(),\n//             ticketsSold: summary[3].toString(),\n//             contractAddress: props.query.address,\n//         };\n//     }\n//     state = {\n//         errorMessage: '',\n//         successMessage: '',\n//         loading: false,\n//         ticketId: ''\n//     };\n//     handleBuyTicket = async () => {\n//         this.setState({ loading: true, errorMessage: '', successMessage: '', ticketId: '' });\n//         const { contractAddress } = this.props;\n//         const event = Event(contractAddress);\n//         try {\n//             const accounts = await web3.eth.getAccounts();\n//             const result = await event.methods.buyTicket().send({\n//                 from: accounts[0],\n//                 value: this.props.ticketPrice\n//             });\n//             const ticketId = result.events.TicketPurchased.returnValues.ticketId;\n//             this.setState({ successMessage: `Ticket purchased successfully! Your Ticket ID is ${ticketId}.`, ticketId });\n//             Router.replaceRoute(`/events/${this.props.contractAddress}`);\n//         } catch (err) {\n//             this.setState({ errorMessage: err.message });\n//         }\n//         this.setState({ loading: false });\n//     };\n//     renderCards() {\n//         const {\n//             name,\n//             ticketPrice,\n//             ticketSupply,\n//             ticketsSold\n//         } = this.props;\n//         const items = [\n//             {\n//                 header: name,\n//                 description: 'Click below to buy tickets'\n//             },\n//             {\n//                 header: ticketPrice,\n//                 meta: 'in wei',\n//                 description: 'Price of one ticket'\n//             },\n//             {\n//                 header: ticketSupply - ticketsSold,\n//                 description: 'Total number of tickets available for the event'\n//             },\n//             {\n//                 header: ticketsSold,\n//                 description: 'Number of tickets sold'\n//             }\n//         ];\n//         return <Card.Group items={items} />;\n//     }\n//     render() {\n//         const { errorMessage, successMessage, loading } = this.state;\n//         return (\n//             <Layout>\n//                 <h3>Event Show</h3>\n//                 {this.renderCards()}\n//                 {errorMessage && (\n//                     <Message error header=\"Oops!\" content={errorMessage} style={{ marginTop: '10px' }} />\n//                 )}\n//                 {successMessage && (\n//                     <Message success header=\"Success!\" content={successMessage} style={{ marginTop: '10px' }} />\n//                 )}\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/owners`}>\n//                     <a>\n//                         <Button primary>View Owners</Button>\n//                     </a>\n//                 </Link>\n//                 <Button \n//                     loading={loading} \n//                     onClick={this.handleBuyTicket} \n//                     primary style={{ marginTop: '10px' }}>\n//                         Buy\n//                 </Button>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/useTicket`}>\n//                     <a>\n//                         <Button primary>Use a Ticket</Button>\n//                     </a>\n//                 </Link>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/refundTicket`}>\n//                     <a>\n//                         <Button primary>Request a refund</Button>\n//                     </a>\n//                 </Link>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/transferTicket`}>\n//                     <a>\n//                         <Button primary>Transfer Ticket</Button>\n//                     </a>\n//                 </Link>\n//             </Layout>\n//         );\n//     }\n// }\n// export default EventShow;\n// import React, { Component } from 'react';\n// import { Card, Button, Message } from 'semantic-ui-react';\n// import Layout from '../../components/Layout';\n// import Event from '../../ethereum/event';\n// import web3 from '../../ethereum/web3';\n// import { Link } from '../../routes';\n// import Router from 'next/router';\n// class EventShow extends Component {\n//     static async getInitialProps(props) {\n//         const event = Event(props.query.address);\n//         const summary = await event.methods.getEventDetails().call();\n//         return {\n//             name: summary[0],\n//             ticketPrice: summary[1].toString(),\n//             ticketSupply: summary[2].toString(),\n//             ticketsSold: summary[3].toString(),\n//             contractAddress: props.query.address,\n//             successMessage: props.query.successMessage || ''\n//         };\n//     }\n//     state = {\n//         errorMessage: '',\n//         successMessage: this.props.successMessage || '',\n//         loading: false,\n//         ticketId: ''\n//     };\n//     handleBuyTicket = async () => {\n//         this.setState({ loading: true, errorMessage: '', successMessage: '', ticketId: '' });\n//         const { contractAddress } = this.props;\n//         const event = Event(contractAddress);\n//         try {\n//             const accounts = await web3.eth.getAccounts();\n//             const result = await event.methods.buyTicket().send({\n//                 from: accounts[0],\n//                 value: this.props.ticketPrice\n//             });\n//             const ticketId = result.events.TicketPurchased.returnValues.ticketId;\n//             this.setState({ successMessage: `Ticket purchased successfully! Your Ticket ID is ${ticketId}.`, ticketId });\n//             Router.replaceRoute(`/events/${this.props.contractAddress}`);\n//         } catch (err) {\n//             this.setState({ errorMessage: err.message });\n//         }\n//         this.setState({ loading: false });\n//     };\n//     renderCards() {\n//         const {\n//             name,\n//             ticketPrice,\n//             ticketSupply,\n//             ticketsSold\n//         } = this.props;\n//         const items = [\n//             {\n//                 header: name,\n//                 description: 'Click below to buy tickets'\n//             },\n//             {\n//                 header: ticketPrice,\n//                 meta: 'in wei',\n//                 description: 'Price of one ticket'\n//             },\n//             {\n//                 header: ticketSupply - ticketsSold,\n//                 description: 'Total number of tickets available for the event'\n//             },\n//             {\n//                 header: ticketsSold,\n//                 description: 'Number of tickets sold'\n//             }\n//         ];\n//         return <Card.Group items={items} />;\n//     }\n//     render() {\n//         const { errorMessage, successMessage, loading } = this.state;\n//         return (\n//             <Layout>\n//                 <h3>Event Show</h3>\n//                 {this.renderCards()}\n//                 {errorMessage && (\n//                     <Message error header=\"Oops!\" content={errorMessage} style={{ marginTop: '10px' }} />\n//                 )}\n//                 {successMessage && (\n//                     <Message success header=\"Success!\" content={successMessage} style={{ marginTop: '10px' }} />\n//                 )}\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/owners`}>\n//                     <a>\n//                         <Button primary>View Owners</Button>\n//                     </a>\n//                 </Link>\n//                 <Button \n//                     loading={loading} \n//                     onClick={this.handleBuyTicket} \n//                     primary style={{ marginTop: '10px' }}>\n//                         Buy\n//                 </Button>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/useTicket`}>\n//                     <a>\n//                         <Button primary>Use a Ticket</Button>\n//                     </a>\n//                 </Link>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/refundTicket`}>\n//                     <a>\n//                         <Button primary>Request a refund</Button>\n//                     </a>\n//                 </Link>\n//                 <Link legacyBehavior route={`/events/${this.props.contractAddress}/transferTicket`}>\n//                     <a>\n//                         <Button primary>Transfer Ticket</Button>\n//                     </a>\n//                 </Link>\n//             </Layout>\n//         );\n//     }\n// }\n// export default EventShow;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/events/show.js\n"));

/***/ })

});